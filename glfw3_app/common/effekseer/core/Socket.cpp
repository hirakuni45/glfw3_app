
//----------------------------------------------------------------------------------
// Include
//----------------------------------------------------------------------------------
#ifdef _WIN32
#include <winsock2.h>
#pragma comment( lib, "ws2_32.lib" )
#else
#include <sys/types.h>
#include <sys/socket.h>
#endif

#include "Effekseer.Socket.h"

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
namespace Effekseer {
//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
void Socket::Initialize()
{
#ifdef _WIN32
	/* Winsock初期化 */
	WSADATA m_WsaData;
	::WSAStartup( MAKEWORD(2,0), &m_WsaData );
#endif
}

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
void Socket::Finalize()
{
#ifdef _WIN32
	/* Winsock参照カウンタ減少+破棄 */
	WSACleanup();
#endif
}

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
EfkSocket Socket::GenSocket()
{
	return ::socket( AF_INET, SOCK_STREAM, IPPROTO_TCP );
}

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
void Socket::Close( EfkSocket s )
{
#ifdef _WIN32
	::closesocket( s );
#else
	::close( s );
#endif
}

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
void Socket::Shutsown( EfkSocket s )
{
#ifdef _WIN32
	::shutdown( s, SD_BOTH );
#else
	::shutdown( s, SHUT_RDWR );
#endif
}

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
bool Socket::Listen( EfkSocket s, int32_t backlog )
{
#ifdef _WIN32
	return ::listen( s, backlog ) != SocketError;
#else
	return listen( s, backlog ) >= 0;
#endif
}

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
 } 
//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------

