
ロジック・フォーム（logic_form.exe）

-----------------------------------------------------------------------------------------------------

機能概要：

・「ロジック・フォーム」は、多チャネル・デジタル信号の波形生成、編集を目的としたアプリケーションです。
・「ＦＰＧＡ　チャッカー４」用の信号パターンを編集する事を目的としている為、最大２４チャネル、２０４６
パターンの波形を自由に作成、編集可能です。
・波形の状態をセーブ、又は、ロードする事が可能です。
・「ＦＰＧＡ　チェッカー４」が受け取れる、ｃｓｖ形式のファイルをエクスポートする事ができます。
・波形編集ウィンドウで、タイムライン上の波形を確認する事ができます。

-----------------------------------------------------------------------------------------------------

取り扱い説明：

・アプリケーションは、内部で、「Inconsolata」フォントを利用しています、インストールしていない場合は、
インストールしておいて下さい。
※「Inconsolata」は以下の場所からダウンロードできます。
http://levien.com/type/myfonts/inconsolata.html
※「Open Type file」を取得して下さい。（Inconsolata.otf）
※フォントのインストールは、Windows の操作説明を参照下さい。

・アプリケーションは、特別なインストーラーは必要ありません、実行ファイルと、添付の DLL を同じフォルダー
に置いておきます。

・アプリケーションの状態は、「logic_form.pre」に記録されます。
※「logic_form.pre」を消去する事で、アプリケーションの状態をリセットできます。

-----------------------------------------------------------------------------------------------------

基本的な操作：




-----------------------------------------------------------------------------------------------------

対話形式コマンド説明：

（１）ステータスの表示
status
バッファ・サイズ、チャネル毎のステート（"H"と"L"の数）表示

（２）カレント・チャネルの指定（チャネル番号：０～２３）
ch [チャネル番号]
Ex: ch     --->   現在のカレント・チャネルを表示して、チャネルモードに移行する。
Ex: ch 5   --->   現在のカレントチャネルを「５」に設定

（３）カレント・バスの指定（チャネル番号：０～２３）
bus [チャネル番号]　...
Ex: bus 2 3 4 5   --->  チャネル２、３、４、５をバスとして設定
Ex: bus   --->  現在のバス・リストを表示して、バスモードに移行する。

（４）バッファのクリア
clear

（５）バッファのサイズ指定（１～２０４６）
create サイズ
※現在のサイズは「status」コマンドで確認できる。
※切り詰めた場合、データは失われる。
※拡大した場合、追加されたデータは「０」が挿入される。

（６）指定位置へ値の設定
set 位置 値
・チャネルモード時
Ex: set 100   --->   位置１００のロジックレベルを「１」に設定
Ex: set 100 0 --->   位置１００のロジックレベルを「０」に設定
・バスモード時
Ex: set 100 0xa   --->  位置（１００）へ、「０ｘＡ」を設定

（７）クロックの設定（「０」、「１」の繰り返しパターン）
clock 開始位置　長さ　「０」カウント　「１」カウント
※バスモード時は無効
Ex: clock 0 100 1 2   --->  開始位置０から、１００カウント、「０」を１、「１」を２並べる

（８）値で埋める
fill 開始位置　長さ　値
Ex: fill 25 20 0   --->   開始位置２５から、２０カウント、「０」で埋める

（９）反転
flip 開始位置　長さ
Ex: flip 10 5   --->  開始位置１０から、５カウント、反転する


（１０）コピー
copy 元位置　長さ　先位置
Ex: copy 0 10 5   --->  位置０から、１０カウントを、位置５へコピー（領域がオーバーラップ
している場合でも、正しくコピーされる）


（１１）チャネルコピー
copy-chanel 先チャネル　[開始位置]　[長さ]
Ex: copy-chanel 5   --->   カレントチャネルから、チャネル５へデータをコピー
※「開始位置」、「長さ」指定が無い場合、チャネル全体がコピーされる

